<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20193.19.1017.1259                               -->
<workbook original-version='18.1' source-build='2019.3.1 (20193.19.1017.1259)' source-platform='win' version='18.1' xml:base='https://eu-west-1a.online.tableau.com' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <AutoCreateAndUpdateDSDPhoneLayouts ignorable='true' predowngraded='true' />
    <Heatmap />
    <MapboxVectorStylesAndLayers />
    <SheetIdentifierTracking ignorable='true' predowngraded='true' />
    <SortTagCleanup />
    <VizInTooltipHideWorksheet />
    <WindowsPersistSimpleIdentifiers />
    <WorksheetBackgroundTransparency />
  </document-format-change-manifest>
  <repository-location id='TermProject_1902201_faaezriaz' path='/t/ceutableau/workbooks' revision='1.6' site='ceutableau' />
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource hasconnection='false' inline='true' name='Parameters' version='18.1'>
      <aliases enabled='yes' />
      <column caption='Area' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Chelsea&quot;'>
        <calculation class='tableau' formula='&quot;Chelsea&quot;' />
        <members>
          <member value='&quot;Allerton&quot;' />
          <member value='&quot;Arden Heights&quot;' />
          <member value='&quot;Arrochar&quot;' />
          <member value='&quot;Arverne&quot;' />
          <member value='&quot;Astoria&quot;' />
          <member value='&quot;Bath Beach&quot;' />
          <member value='&quot;Battery Park City&quot;' />
          <member value='&quot;Bay Ridge&quot;' />
          <member value='&quot;Bay Terrace&quot;' />
          <member value='&quot;Bay Terrace, Staten Island&quot;' />
          <member value='&quot;Baychester&quot;' />
          <member value='&quot;Bayside&quot;' />
          <member value='&quot;Bayswater&quot;' />
          <member value='&quot;Bedford-Stuyvesant&quot;' />
          <member value='&quot;Belle Harbor&quot;' />
          <member value='&quot;Bellerose&quot;' />
          <member value='&quot;Belmont&quot;' />
          <member value='&quot;Bensonhurst&quot;' />
          <member value='&quot;Bergen Beach&quot;' />
          <member value='&quot;Boerum Hill&quot;' />
          <member value='&quot;Borough Park&quot;' />
          <member value='&quot;Breezy Point&quot;' />
          <member value='&quot;Briarwood&quot;' />
          <member value='&quot;Brighton Beach&quot;' />
          <member value='&quot;Bronxdale&quot;' />
          <member value='&quot;Brooklyn Heights&quot;' />
          <member value='&quot;Brownsville&quot;' />
          <member value='&quot;Bull&apos;s Head&quot;' />
          <member value='&quot;Bushwick&quot;' />
          <member value='&quot;Cambria Heights&quot;' />
          <member value='&quot;Canarsie&quot;' />
          <member value='&quot;Carroll Gardens&quot;' />
          <member value='&quot;Castle Hill&quot;' />
          <member value='&quot;Castleton Corners&quot;' />
          <member value='&quot;Chelsea&quot;' />
          <member value='&quot;Chinatown&quot;' />
          <member value='&quot;City Island&quot;' />
          <member value='&quot;Civic Center&quot;' />
          <member value='&quot;Claremont Village&quot;' />
          <member value='&quot;Clason Point&quot;' />
          <member value='&quot;Clifton&quot;' />
          <member value='&quot;Clinton Hill&quot;' />
          <member value='&quot;Co-op City&quot;' />
          <member value='&quot;Cobble Hill&quot;' />
          <member value='&quot;College Point&quot;' />
          <member value='&quot;Columbia St&quot;' />
          <member value='&quot;Concord&quot;' />
          <member value='&quot;Concourse&quot;' />
          <member value='&quot;Concourse Village&quot;' />
          <member value='&quot;Coney Island&quot;' />
          <member value='&quot;Corona&quot;' />
          <member value='&quot;Crown Heights&quot;' />
          <member value='&quot;Cypress Hills&quot;' />
          <member value='&quot;Ditmars Steinway&quot;' />
          <member value='&quot;Dongan Hills&quot;' />
          <member value='&quot;Douglaston&quot;' />
          <member value='&quot;Downtown Brooklyn&quot;' />
          <member value='&quot;DUMBO&quot;' />
          <member value='&quot;Dyker Heights&quot;' />
          <member value='&quot;East Elmhurst&quot;' />
          <member value='&quot;East Flatbush&quot;' />
          <member value='&quot;East Harlem&quot;' />
          <member value='&quot;East Morrisania&quot;' />
          <member value='&quot;East New York&quot;' />
          <member value='&quot;East Village&quot;' />
          <member value='&quot;Eastchester&quot;' />
          <member value='&quot;Edenwald&quot;' />
          <member value='&quot;Edgemere&quot;' />
          <member value='&quot;Elmhurst&quot;' />
          <member value='&quot;Eltingville&quot;' />
          <member value='&quot;Emerson Hill&quot;' />
          <member value='&quot;Far Rockaway&quot;' />
          <member value='&quot;Fieldston&quot;' />
          <member value='&quot;Financial District&quot;' />
          <member value='&quot;Flatbush&quot;' />
          <member value='&quot;Flatiron District&quot;' />
          <member value='&quot;Flatlands&quot;' />
          <member value='&quot;Flushing&quot;' />
          <member value='&quot;Fordham&quot;' />
          <member value='&quot;Forest Hills&quot;' />
          <member value='&quot;Fort Greene&quot;' />
          <member value='&quot;Fort Hamilton&quot;' />
          <member value='&quot;Fort Wadsworth&quot;' />
          <member value='&quot;Fresh Meadows&quot;' />
          <member value='&quot;Glendale&quot;' />
          <member value='&quot;Gowanus&quot;' />
          <member value='&quot;Gramercy&quot;' />
          <member value='&quot;Graniteville&quot;' />
          <member value='&quot;Grant City&quot;' />
          <member value='&quot;Gravesend&quot;' />
          <member value='&quot;Great Kills&quot;' />
          <member value='&quot;Greenpoint&quot;' />
          <member value='&quot;Greenwich Village&quot;' />
          <member value='&quot;Grymes Hill&quot;' />
          <member value='&quot;Harlem&quot;' />
          <member value='&quot;Hell&apos;s Kitchen&quot;' />
          <member value='&quot;Highbridge&quot;' />
          <member value='&quot;Hollis&quot;' />
          <member value='&quot;Holliswood&quot;' />
          <member value='&quot;Howard Beach&quot;' />
          <member value='&quot;Howland Hook&quot;' />
          <member value='&quot;Huguenot&quot;' />
          <member value='&quot;Hunts Point&quot;' />
          <member value='&quot;Inwood&quot;' />
          <member value='&quot;Jackson Heights&quot;' />
          <member value='&quot;Jamaica&quot;' />
          <member value='&quot;Jamaica Estates&quot;' />
          <member value='&quot;Jamaica Hills&quot;' />
          <member value='&quot;Kensington&quot;' />
          <member value='&quot;Kew Gardens&quot;' />
          <member value='&quot;Kew Gardens Hills&quot;' />
          <member value='&quot;Kingsbridge&quot;' />
          <member value='&quot;Kips Bay&quot;' />
          <member value='&quot;Laurelton&quot;' />
          <member value='&quot;Lighthouse Hill&quot;' />
          <member value='&quot;Little Italy&quot;' />
          <member value='&quot;Little Neck&quot;' />
          <member value='&quot;Long Island City&quot;' />
          <member value='&quot;Longwood&quot;' />
          <member value='&quot;Lower East Side&quot;' />
          <member value='&quot;Manhattan Beach&quot;' />
          <member value='&quot;Marble Hill&quot;' />
          <member value='&quot;Mariners Harbor&quot;' />
          <member value='&quot;Maspeth&quot;' />
          <member value='&quot;Melrose&quot;' />
          <member value='&quot;Middle Village&quot;' />
          <member value='&quot;Midland Beach&quot;' />
          <member value='&quot;Midtown&quot;' />
          <member value='&quot;Midwood&quot;' />
          <member value='&quot;Mill Basin&quot;' />
          <member value='&quot;Morningside Heights&quot;' />
          <member value='&quot;Morris Heights&quot;' />
          <member value='&quot;Morris Park&quot;' />
          <member value='&quot;Morrisania&quot;' />
          <member value='&quot;Mott Haven&quot;' />
          <member value='&quot;Mount Eden&quot;' />
          <member value='&quot;Mount Hope&quot;' />
          <member value='&quot;Murray Hill&quot;' />
          <member value='&quot;Navy Yard&quot;' />
          <member value='&quot;Neponsit&quot;' />
          <member value='&quot;New Brighton&quot;' />
          <member value='&quot;New Dorp&quot;' />
          <member value='&quot;New Dorp Beach&quot;' />
          <member value='&quot;New Springville&quot;' />
          <member value='&quot;NoHo&quot;' />
          <member value='&quot;Nolita&quot;' />
          <member value='&quot;North Riverdale&quot;' />
          <member value='&quot;Norwood&quot;' />
          <member value='&quot;Oakwood&quot;' />
          <member value='&quot;Olinville&quot;' />
          <member value='&quot;Ozone Park&quot;' />
          <member value='&quot;Park Slope&quot;' />
          <member value='&quot;Parkchester&quot;' />
          <member value='&quot;Pelham Bay&quot;' />
          <member value='&quot;Pelham Gardens&quot;' />
          <member value='&quot;Port Morris&quot;' />
          <member value='&quot;Port Richmond&quot;' />
          <member value='&quot;Prince&apos;s Bay&quot;' />
          <member value='&quot;Prospect Heights&quot;' />
          <member value='&quot;Prospect-Lefferts Gardens&quot;' />
          <member value='&quot;Queens Village&quot;' />
          <member value='&quot;Randall Manor&quot;' />
          <member value='&quot;Red Hook&quot;' />
          <member value='&quot;Rego Park&quot;' />
          <member value='&quot;Richmond Hill&quot;' />
          <member value='&quot;Richmondtown&quot;' />
          <member value='&quot;Ridgewood&quot;' />
          <member value='&quot;Riverdale&quot;' />
          <member value='&quot;Rockaway Beach&quot;' />
          <member value='&quot;Roosevelt Island&quot;' />
          <member value='&quot;Rosebank&quot;' />
          <member value='&quot;Rosedale&quot;' />
          <member value='&quot;Rossville&quot;' />
          <member value='&quot;Schuylerville&quot;' />
          <member value='&quot;Sea Gate&quot;' />
          <member value='&quot;Sheepshead Bay&quot;' />
          <member value='&quot;Shore Acres&quot;' />
          <member value='&quot;Silver Lake&quot;' />
          <member value='&quot;SoHo&quot;' />
          <member value='&quot;Soundview&quot;' />
          <member value='&quot;South Beach&quot;' />
          <member value='&quot;South Ozone Park&quot;' />
          <member value='&quot;South Slope&quot;' />
          <member value='&quot;Springfield Gardens&quot;' />
          <member value='&quot;Spuyten Duyvil&quot;' />
          <member value='&quot;St. Albans&quot;' />
          <member value='&quot;St. George&quot;' />
          <member value='&quot;Stapleton&quot;' />
          <member value='&quot;Stuyvesant Town&quot;' />
          <member value='&quot;Sunnyside&quot;' />
          <member value='&quot;Sunset Park&quot;' />
          <member value='&quot;Theater District&quot;' />
          <member value='&quot;Throgs Neck&quot;' />
          <member value='&quot;Todt Hill&quot;' />
          <member value='&quot;Tompkinsville&quot;' />
          <member value='&quot;Tottenville&quot;' />
          <member value='&quot;Tremont&quot;' />
          <member value='&quot;Tribeca&quot;' />
          <member value='&quot;Two Bridges&quot;' />
          <member value='&quot;Unionport&quot;' />
          <member value='&quot;University Heights&quot;' />
          <member value='&quot;Upper East Side&quot;' />
          <member value='&quot;Upper West Side&quot;' />
          <member value='&quot;Van Nest&quot;' />
          <member value='&quot;Vinegar Hill&quot;' />
          <member value='&quot;Wakefield&quot;' />
          <member value='&quot;Washington Heights&quot;' />
          <member value='&quot;West Brighton&quot;' />
          <member value='&quot;West Farms&quot;' />
          <member value='&quot;West Village&quot;' />
          <member value='&quot;Westchester Square&quot;' />
          <member value='&quot;Westerleigh&quot;' />
          <member value='&quot;Whitestone&quot;' />
          <member value='&quot;Williamsbridge&quot;' />
          <member value='&quot;Williamsburg&quot;' />
          <member value='&quot;Willowbrook&quot;' />
          <member value='&quot;Windsor Terrace&quot;' />
          <member value='&quot;Woodhaven&quot;' />
          <member value='&quot;Woodlawn&quot;' />
          <member value='&quot;Woodrow&quot;' />
          <member value='&quot;Woodside&quot;' />
        </members>
      </column>
      <column caption='Radial Inner' datatype='real' name='[Parameter 2]' param-domain-type='any' role='measure' type='quantitative' value='0.5'>
        <calculation class='tableau' formula='0.5' />
      </column>
      <column caption='Radial Outer' datatype='real' name='[Parameter 3]' param-domain-type='any' role='measure' type='quantitative' value='1.0'>
        <calculation class='tableau' formula='1.0' />
      </column>
    </datasource>
    <datasource caption='AB_NYC_2019' inline='true' name='federated.1qo3cr50d39wam1102h3h1os14q7' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='AB_NYC_2019' name='textscan.0fcth071fqilip16neuxs1e9m9d4'>
            <connection class='textscan' directory='C:/Users/faaez/OneDrive - Central European University/Current Courses/Intro to Data Visualization/Final Project' filename='AB_NYC_2019.csv' password='' server='' workgroup-auth-mode='as-is' />
          </named-connection>
        </named-connections>
        <relation all='true' name='AB_NYC_2019.csv+' type='union'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='integer' name='id' />
            <column datatype='string' name='name' />
            <column datatype='integer' name='host_id' />
            <column datatype='string' name='host_name' />
            <column datatype='string' name='neighbourhood_group' />
            <column datatype='string' name='neighbourhood' />
            <column datatype='real' name='latitude' />
            <column datatype='real' name='longitude' />
            <column datatype='string' name='room_type' />
            <column datatype='integer' name='price' />
            <column datatype='integer' name='minimum_nights' />
            <column datatype='integer' name='number_of_reviews' />
            <column datatype='date' name='last_review' />
            <column datatype='real' name='reviews_per_month' />
            <column datatype='integer' name='calculated_host_listings_count' />
            <column datatype='integer' name='availability_365' />
            <column datatype='string' name='Table Name' />
          </columns>
          <relation connection='textscan.0fcth071fqilip16neuxs1e9m9d4' name='AB_NYC_2019.csv' table='[AB_NYC_2019#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='integer' name='id' ordinal='0' />
              <column datatype='string' name='name' ordinal='1' />
              <column datatype='integer' name='host_id' ordinal='2' />
              <column datatype='string' name='host_name' ordinal='3' />
              <column datatype='string' name='neighbourhood_group' ordinal='4' />
              <column datatype='string' name='neighbourhood' ordinal='5' />
              <column datatype='real' name='latitude' ordinal='6' />
              <column datatype='real' name='longitude' ordinal='7' />
              <column datatype='string' name='room_type' ordinal='8' />
              <column datatype='integer' name='price' ordinal='9' />
              <column datatype='integer' name='minimum_nights' ordinal='10' />
              <column datatype='integer' name='number_of_reviews' ordinal='11' />
              <column datatype='date' name='last_review' ordinal='12' />
              <column datatype='real' name='reviews_per_month' ordinal='13' />
              <column datatype='integer' name='calculated_host_listings_count' ordinal='14' />
              <column datatype='integer' name='availability_365' ordinal='15' />
            </columns>
          </relation>
          <relation connection='textscan.0fcth071fqilip16neuxs1e9m9d4' name='AB_NYC_2019.csv1' table='[AB_NYC_2019#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='integer' name='id' ordinal='0' />
              <column datatype='string' name='name' ordinal='1' />
              <column datatype='integer' name='host_id' ordinal='2' />
              <column datatype='string' name='host_name' ordinal='3' />
              <column datatype='string' name='neighbourhood_group' ordinal='4' />
              <column datatype='string' name='neighbourhood' ordinal='5' />
              <column datatype='real' name='latitude' ordinal='6' />
              <column datatype='real' name='longitude' ordinal='7' />
              <column datatype='string' name='room_type' ordinal='8' />
              <column datatype='integer' name='price' ordinal='9' />
              <column datatype='integer' name='minimum_nights' ordinal='10' />
              <column datatype='integer' name='number_of_reviews' ordinal='11' />
              <column datatype='date' name='last_review' ordinal='12' />
              <column datatype='real' name='reviews_per_month' ordinal='13' />
              <column datatype='integer' name='calculated_host_listings_count' ordinal='14' />
              <column datatype='integer' name='availability_365' ordinal='15' />
            </columns>
          </relation>
        </relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[AB_NYC_2019.csv+]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>id</remote-name>
            <remote-type>20</remote-type>
            <local-name>[id]</local-name>
            <parent-name>[AB_NYC_2019.csv+]</parent-name>
            <remote-alias>id</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[name]</local-name>
            <parent-name>[AB_NYC_2019.csv+]</parent-name>
            <remote-alias>name</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>host_id</remote-name>
            <remote-type>20</remote-type>
            <local-name>[host_id]</local-name>
            <parent-name>[AB_NYC_2019.csv+]</parent-name>
            <remote-alias>host_id</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>host_name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[host_name]</local-name>
            <parent-name>[AB_NYC_2019.csv+]</parent-name>
            <remote-alias>host_name</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>neighbourhood_group</remote-name>
            <remote-type>129</remote-type>
            <local-name>[neighbourhood_group]</local-name>
            <parent-name>[AB_NYC_2019.csv+]</parent-name>
            <remote-alias>neighbourhood_group</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>neighbourhood</remote-name>
            <remote-type>129</remote-type>
            <local-name>[neighbourhood]</local-name>
            <parent-name>[AB_NYC_2019.csv+]</parent-name>
            <remote-alias>neighbourhood</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>latitude</remote-name>
            <remote-type>5</remote-type>
            <local-name>[latitude]</local-name>
            <parent-name>[AB_NYC_2019.csv+]</parent-name>
            <remote-alias>latitude</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>longitude</remote-name>
            <remote-type>5</remote-type>
            <local-name>[longitude]</local-name>
            <parent-name>[AB_NYC_2019.csv+]</parent-name>
            <remote-alias>longitude</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>room_type</remote-name>
            <remote-type>129</remote-type>
            <local-name>[room_type]</local-name>
            <parent-name>[AB_NYC_2019.csv+]</parent-name>
            <remote-alias>room_type</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>price</remote-name>
            <remote-type>20</remote-type>
            <local-name>[price]</local-name>
            <parent-name>[AB_NYC_2019.csv+]</parent-name>
            <remote-alias>price</remote-alias>
            <ordinal>9</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>minimum_nights</remote-name>
            <remote-type>20</remote-type>
            <local-name>[minimum_nights]</local-name>
            <parent-name>[AB_NYC_2019.csv+]</parent-name>
            <remote-alias>minimum_nights</remote-alias>
            <ordinal>10</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>number_of_reviews</remote-name>
            <remote-type>20</remote-type>
            <local-name>[number_of_reviews]</local-name>
            <parent-name>[AB_NYC_2019.csv+]</parent-name>
            <remote-alias>number_of_reviews</remote-alias>
            <ordinal>11</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>last_review</remote-name>
            <remote-type>133</remote-type>
            <local-name>[last_review]</local-name>
            <parent-name>[AB_NYC_2019.csv+]</parent-name>
            <remote-alias>last_review</remote-alias>
            <ordinal>12</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>reviews_per_month</remote-name>
            <remote-type>5</remote-type>
            <local-name>[reviews_per_month]</local-name>
            <parent-name>[AB_NYC_2019.csv+]</parent-name>
            <remote-alias>reviews_per_month</remote-alias>
            <ordinal>13</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>calculated_host_listings_count</remote-name>
            <remote-type>20</remote-type>
            <local-name>[calculated_host_listings_count]</local-name>
            <parent-name>[AB_NYC_2019.csv+]</parent-name>
            <remote-alias>calculated_host_listings_count</remote-alias>
            <ordinal>14</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>availability_365</remote-name>
            <remote-type>20</remote-type>
            <local-name>[availability_365]</local-name>
            <parent-name>[AB_NYC_2019.csv+]</parent-name>
            <remote-alias>availability_365</remote-alias>
            <ordinal>15</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Table Name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Table Name]</local-name>
            <parent-name>[AB_NYC_2019.csv+]</parent-name>
            <remote-alias>Table Name</remote-alias>
            <ordinal>16</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[:Measure Names]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;[federated.1qo3cr50d39wam1102h3h1os14q7].[avg:price:qk]&quot;' value='Price' />
          <alias key='&quot;[federated.1qo3cr50d39wam1102h3h1os14q7].[usr:Calculation_1787366158370811905:qk:3]&quot;' value='Distance from City Centre' />
        </aliases>
      </column>
      <column caption='Check Centre' datatype='integer' name='[Calculation_1787366158370357248]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [neighbourhood] == [Calculation_686798999819374593]&#13;&#10;THEN 1 ELSE 2 END' />
      </column>
      <column caption='Distance' datatype='real' datatype-customized='true' name='[Calculation_1787366158370811905]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='ACOS((SIN(RADIANS(LOOKUP(AVG([latitude]), First())))&#13;&#10;* SIN(RADIANS(AVG([latitude]))) + COS(RADIANS(LOOKUP(AVG([latitude]), First()))) * COS(RADIANS(AVG([latitude]))) *&#13;&#10;COS(RADIANS(AVG([longitude])) - RADIANS(LOOKUP(AVG([longitude]), First()))) ))*3959'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column aggregation='Sum' caption='Path Order' datatype='integer' name='[Calculation_1787366158381551621]' role='dimension' type='ordinal'>
        <calculation class='tableau' formula='IIF([Table Name] = &quot;AB_NYC_2019.csv&quot; , 0, 1)' />
      </column>
      <column caption='Radial Field' datatype='integer' name='[Calculation_1787366158382645254]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[price]' />
      </column>
      <column caption='Radial Angle' datatype='real' name='[Calculation_1787366158382911495]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='(INDEX()-1) * (1/WINDOW_COUNT(COUNT([Calculation_1787366158382645254]))) * 2 * PI()'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Radial Normalised Length' datatype='real' name='[Calculation_1787366158383144968]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Parameters].[Parameter 2] + IIF(ATTR([Calculation_1787366158381551621]) = 0, 0, sum([Calculation_1787366158382645254])/WINDOW_MAX(sum([Calculation_1787366158382645254])) * ([Parameters].[Parameter 3]-[Parameters].[Parameter 2]))'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Radial X' datatype='real' name='[Calculation_1787366158383263753]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Calculation_1787366158383144968] * COS([Calculation_1787366158382911495])'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Radial Y' datatype='real' name='[Calculation_1787366158383366154]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Calculation_1787366158383144968] * SIN([Calculation_1787366158382911495])'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Popularity' datatype='integer' datatype-customized='true' name='[Calculation_1787366158423248908]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='INT(Round(((AVG([number_of_reviews]) - Min([Number of Records]))/(Max([number_of_reviews]) - Min([Number of Records])))*10))' />
      </column>
      <column caption='Percentage Availability' datatype='real' name='[Calculation_1787366158453080082]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='([availability_365]/365)*100' />
      </column>
      <column caption='Chelsea' datatype='string' name='[Calculation_686798999819374593]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='&quot;Chelsea&quot;' />
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Availability 365' datatype='integer' name='[availability_365]' role='measure' type='quantitative' />
      <column caption='Calculated Host Listings Count' datatype='integer' name='[calculated_host_listings_count]' role='measure' type='quantitative' />
      <column caption='Host Id' datatype='integer' name='[host_id]' role='dimension' type='ordinal' />
      <column caption='Host Name' datatype='string' name='[host_name]' role='dimension' type='nominal' />
      <column caption='Id' datatype='integer' name='[id]' role='dimension' type='ordinal' />
      <column caption='Last Review' datatype='date' name='[last_review]' role='dimension' type='ordinal' />
      <column aggregation='Avg' caption='Latitude' datatype='real' name='[latitude]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
      <column aggregation='Avg' caption='Longitude' datatype='real' name='[longitude]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
      <column caption='Minimum Nights' datatype='integer' name='[minimum_nights]' role='measure' type='quantitative' />
      <column caption='Name' datatype='string' name='[name]' role='dimension' type='nominal' />
      <column caption='Neighbourhood' datatype='string' name='[neighbourhood]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;Clifton&quot;' value='Distance to City Centre' />
        </aliases>
      </column>
      <column caption='Neighbourhood Group' datatype='string' name='[neighbourhood_group]' role='dimension' type='nominal' />
      <column caption='Number Of Reviews' datatype='integer' name='[number_of_reviews]' role='measure' type='quantitative' />
      <column caption='Price' datatype='integer' name='[price]' role='measure' type='quantitative' />
      <column caption='Reviews Per Month' datatype='real' name='[reviews_per_month]' role='dimension' type='quantitative' />
      <column caption='Room Type' datatype='string' name='[room_type]' role='dimension' type='nominal' />
      <column-instance column='[availability_365]' derivation='Avg' name='[avg:availability_365:qk]' pivot='key' type='quantitative' />
      <column-instance column='[price]' derivation='Avg' name='[avg:price:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_1787366158370357248]' derivation='Min' name='[min:Calculation_1787366158370357248:ok]' pivot='key' type='ordinal' />
      <column-instance column='[neighbourhood]' derivation='None' name='[none:neighbourhood:nk]' pivot='key' type='nominal' />
      <column-instance column='[neighbourhood_group]' derivation='None' name='[none:neighbourhood_group:nk]' pivot='key' type='nominal' />
      <column-instance column='[room_type]' derivation='None' name='[none:room_type:nk]' pivot='key' type='nominal' />
      <column-instance column='[availability_365]' derivation='Sum' name='[sum:availability_365:qk]' pivot='key' type='quantitative' />
      <column-instance column='[number_of_reviews]' derivation='Sum' name='[sum:number_of_reviews:qk]' pivot='key' type='quantitative' />
      <column-instance column='[price]' derivation='Sum' name='[sum:price:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_1787366158370811905]' derivation='User' name='[usr:Calculation_1787366158370811905:ok]' pivot='key' type='ordinal'>
        <table-calc ordering-field='[federated.1qo3cr50d39wam1102h3h1os14q7].[neighbourhood]' ordering-type='Field' />
      </column-instance>
      <column-instance column='[Calculation_1787366158370811905]' derivation='User' name='[usr:Calculation_1787366158370811905:qk:1]' pivot='key' type='quantitative'>
        <table-calc ordering-field='' ordering-type='Field' />
      </column-instance>
      <column-instance column='[Calculation_1787366158370811905]' derivation='User' name='[usr:Calculation_1787366158370811905:qk:3]' pivot='key' type='quantitative'>
        <table-calc ordering-field='[federated.1qo3cr50d39wam1102h3h1os14q7].[none:neighbourhood:nk]' ordering-type='Field' />
      </column-instance>
      <column-instance column='[Calculation_1787366158370811905]' derivation='User' name='[usr:Calculation_1787366158370811905:qk:4]' pivot='key' type='quantitative'>
        <table-calc ordering-field='[federated.1qo3cr50d39wam1102h3h1os14q7].[neighbourhood]' ordering-type='Field' />
      </column-instance>
      <column-instance column='[Calculation_1787366158370811905]' derivation='User' name='[usr:Calculation_1787366158370811905:qk:5]' pivot='key' type='quantitative'>
        <table-calc ordering-type='CellInPane' />
      </column-instance>
      <column-instance column='[Calculation_1787366158370811905]' derivation='User' name='[usr:Calculation_1787366158370811905:qk:6]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Field'>
          <order field='[federated.1qo3cr50d39wam1102h3h1os14q7].[none:neighbourhood:nk]' />
          <sort direction='ASC' using='[federated.1qo3cr50d39wam1102h3h1os14q7].[sum:availability_365:qk]' />
        </table-calc>
      </column-instance>
      <column-instance column='[Calculation_1787366158370811905]' derivation='User' name='[usr:Calculation_1787366158370811905:qk:7]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Field'>
          <order field='[federated.1qo3cr50d39wam1102h3h1os14q7].[none:neighbourhood:nk]' />
          <sort direction='ASC' using='[federated.1qo3cr50d39wam1102h3h1os14q7].[sum:price:qk]' />
        </table-calc>
      </column-instance>
      <column-instance column='[Calculation_1787366158370811905]' derivation='User' name='[usr:Calculation_1787366158370811905:qk:8]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Field'>
          <order field='[federated.1qo3cr50d39wam1102h3h1os14q7].[none:neighbourhood:nk]' />
          <sort direction='ASC' using='[federated.1qo3cr50d39wam1102h3h1os14q7].[avg:price:qk]' />
        </table-calc>
      </column-instance>
      <column-instance column='[Calculation_1787366158370811905]' derivation='User' name='[usr:Calculation_1787366158370811905:qk:9]' pivot='key' type='quantitative'>
        <table-calc ordering-field='[federated.1qo3cr50d39wam1102h3h1os14q7].[none:neighbourhood_group:nk]' ordering-type='Field' />
      </column-instance>
      <column-instance column='[Calculation_1787366158370811905]' derivation='User' name='[usr:Calculation_1787366158370811905:qk]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Rows' />
      </column-instance>
      <group caption='Action (Name)' hidden='true' name='[Action (Name)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[name]' />
        </groupfilter>
      </group>
      <group caption='Action (Neighbourhood Group)' hidden='true' name='[Action (Neighbourhood Group)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[neighbourhood_group]' />
        </groupfilter>
      </group>
      <group caption='Action (Neighbourhood)' hidden='true' name='[Action (Neighbourhood)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[neighbourhood]' />
        </groupfilter>
      </group>
      <group caption='Action (Neighbourhood,Neighbourhood Group)' hidden='true' name='[Action (Neighbourhood,Neighbourhood Group)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[neighbourhood]' />
          <groupfilter function='level-members' level='[neighbourhood_group]' />
        </groupfilter>
      </group>
      <group caption='Action (Path Order,Id,Neighbourhood Group)' hidden='true' name='[Action (Path Order,Id,Neighbourhood Group)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Calculation_1787366158381551621]' />
          <groupfilter function='level-members' level='[id]' />
          <groupfilter function='level-members' level='[neighbourhood_group]' />
        </groupfilter>
      </group>
      <group caption='Action (Room Type)' hidden='true' name='[Action (Room Type)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[room_type]' />
        </groupfilter>
      </group>
      <group caption='City Centre' name='[Set 1]' name-style='unqualified' user:ui-builder='lasso-group'>
        <groupfilter function='member' level='[neighbourhood]' member='&quot;Chelsea&quot;' />
      </group>
      <group caption='Tooltip (Path Order,Id,Neighbourhood Group)' hidden='true' name='[Tooltip (Path Order,Id,Neighbourhood Group)]' name-style='unqualified' user:auto-column='sheet_link' user:ui-vit-column='true'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Calculation_1787366158381551621]' />
          <groupfilter function='level-members' level='[id]' />
          <groupfilter function='level-members' level='[neighbourhood_group]' />
        </groupfilter>
      </group>
      <layout dim-ordering='alphabetic' dim-percentage='0.457831' group-percentage='0.0421687' measure-ordering='alphabetic' measure-percentage='0.38253' parameter-percentage='0.11747' rowDisplayCount='1000' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1qo3cr50d39wam1102h3h1os14q7].[avg:availability_365:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1qo3cr50d39wam1102h3h1os14q7].[usr:Calculation_1787366158370811905:qk:9]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.1qo3cr50d39wam1102h3h1os14q7].[sum:number_of_reviews:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.1qo3cr50d39wam1102h3h1os14q7].[usr:Calculation_1787366158370811905:ok]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.1qo3cr50d39wam1102h3h1os14q7].[usr:Calculation_1787366158370811905:qk:1]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.1qo3cr50d39wam1102h3h1os14q7].[usr:Calculation_1787366158370811905:qk:3]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.1qo3cr50d39wam1102h3h1os14q7].[usr:Calculation_1787366158370811905:qk:4]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.1qo3cr50d39wam1102h3h1os14q7].[usr:Calculation_1787366158370811905:qk:5]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.1qo3cr50d39wam1102h3h1os14q7].[usr:Calculation_1787366158370811905:qk:6]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.1qo3cr50d39wam1102h3h1os14q7].[usr:Calculation_1787366158370811905:qk:7]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.1qo3cr50d39wam1102h3h1os14q7].[usr:Calculation_1787366158370811905:qk:8]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.1qo3cr50d39wam1102h3h1os14q7].[usr:Calculation_1787366158370811905:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1qo3cr50d39wam1102h3h1os14q7].[avg:price:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1qo3cr50d39wam1102h3h1os14q7].[sum:price:qk]&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:neighbourhood_group:nk]' palette='color_blind_10_0' type='palette'>
            <map to='#1170aa'>
              <bucket>&quot;Bronx&quot;</bucket>
            </map>
            <map to='#57606c'>
              <bucket>&quot;Queens&quot;</bucket>
            </map>
            <map to='#5fa2ce'>
              <bucket>&quot;Staten Island&quot;</bucket>
            </map>
            <map to='#a3acb9'>
              <bucket>&quot;Manhattan&quot;</bucket>
            </map>
            <map to='#fc7d0b'>
              <bucket>&quot;Brooklyn&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='shape' field='[min:Calculation_1787366158370357248:ok]' type='shape'>
            <map to=':filled/asterisk'>
              <bucket>1</bucket>
            </map>
            <map to='Custom/aprt.png'>
              <bucket>2</bucket>
            </map>
            <map to='asterisk'>
              <bucket>5</bucket>
            </map>
            <map to='asterisk'>
              <bucket>15</bucket>
            </map>
            <map to='asterisk'>
              <bucket>29</bucket>
            </map>
            <map to='asterisk'>
              <bucket>48</bucket>
            </map>
            <map to='asterisk'>
              <bucket>63</bucket>
            </map>
            <map to='asterisk'>
              <bucket>80</bucket>
            </map>
            <map to='asterisk'>
              <bucket>135</bucket>
            </map>
            <map to='asterisk'>
              <bucket>185</bucket>
            </map>
            <map to='asterisk'>
              <bucket>284</bucket>
            </map>
            <map to='asterisk'>
              <bucket>392</bucket>
            </map>
            <map to='asterisk'>
              <bucket>572</bucket>
            </map>
            <map to='asterisk'>
              <bucket>1545</bucket>
            </map>
            <map to='circle'>
              <bucket>11</bucket>
            </map>
            <map to='circle'>
              <bucket>24</bucket>
            </map>
            <map to='circle'>
              <bucket>39</bucket>
            </map>
            <map to='circle'>
              <bucket>59</bucket>
            </map>
            <map to='circle'>
              <bucket>76</bucket>
            </map>
            <map to='circle'>
              <bucket>106</bucket>
            </map>
            <map to='circle'>
              <bucket>157</bucket>
            </map>
            <map to='circle'>
              <bucket>237</bucket>
            </map>
            <map to='circle'>
              <bucket>358</bucket>
            </map>
            <map to='circle'>
              <bucket>500</bucket>
            </map>
            <map to='circle'>
              <bucket>911</bucket>
            </map>
            <map to='circle'>
              <bucket>2465</bucket>
            </map>
            <map to='diamond'>
              <bucket>6</bucket>
            </map>
            <map to='diamond'>
              <bucket>17</bucket>
            </map>
            <map to='diamond'>
              <bucket>31</bucket>
            </map>
            <map to='diamond'>
              <bucket>50</bucket>
            </map>
            <map to='diamond'>
              <bucket>64</bucket>
            </map>
            <map to='diamond'>
              <bucket>83</bucket>
            </map>
            <map to='diamond'>
              <bucket>136</bucket>
            </map>
            <map to='diamond'>
              <bucket>186</bucket>
            </map>
            <map to='diamond'>
              <bucket>288</bucket>
            </map>
            <map to='diamond'>
              <bucket>423</bucket>
            </map>
            <map to='diamond'>
              <bucket>621</bucket>
            </map>
            <map to='diamond'>
              <bucket>1564</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>8</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>19</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>34</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>54</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>70</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>88</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>144</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>231</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>338</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>470</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>768</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>1853</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>9</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>20</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>36</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>55</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>72</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>94</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>147</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>233</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>346</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>485</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>899</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>1958</bucket>
            </map>
            <map to='plus'>
              <bucket>3</bucket>
            </map>
            <map to='plus'>
              <bucket>13</bucket>
            </map>
            <map to='plus'>
              <bucket>27</bucket>
            </map>
            <map to='plus'>
              <bucket>42</bucket>
            </map>
            <map to='plus'>
              <bucket>61</bucket>
            </map>
            <map to='plus'>
              <bucket>78</bucket>
            </map>
            <map to='plus'>
              <bucket>110</bucket>
            </map>
            <map to='plus'>
              <bucket>175</bucket>
            </map>
            <map to='plus'>
              <bucket>252</bucket>
            </map>
            <map to='plus'>
              <bucket>368</bucket>
            </map>
            <map to='plus'>
              <bucket>535</bucket>
            </map>
            <map to='plus'>
              <bucket>1115</bucket>
            </map>
            <map to='plus'>
              <bucket>3714</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>10</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>21</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>37</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>56</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>75</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>99</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>154</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>235</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>357</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>489</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>900</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>1971</bucket>
            </map>
            <map to='square'>
              <bucket>12</bucket>
            </map>
            <map to='square'>
              <bucket>26</bucket>
            </map>
            <map to='square'>
              <bucket>40</bucket>
            </map>
            <map to='square'>
              <bucket>60</bucket>
            </map>
            <map to='square'>
              <bucket>77</bucket>
            </map>
            <map to='square'>
              <bucket>109</bucket>
            </map>
            <map to='square'>
              <bucket>164</bucket>
            </map>
            <map to='square'>
              <bucket>247</bucket>
            </map>
            <map to='square'>
              <bucket>363</bucket>
            </map>
            <map to='square'>
              <bucket>506</bucket>
            </map>
            <map to='square'>
              <bucket>1113</bucket>
            </map>
            <map to='square'>
              <bucket>2658</bucket>
            </map>
            <map to='times'>
              <bucket>4</bucket>
            </map>
            <map to='times'>
              <bucket>14</bucket>
            </map>
            <map to='times'>
              <bucket>28</bucket>
            </map>
            <map to='times'>
              <bucket>46</bucket>
            </map>
            <map to='times'>
              <bucket>62</bucket>
            </map>
            <map to='times'>
              <bucket>79</bucket>
            </map>
            <map to='times'>
              <bucket>121</bucket>
            </map>
            <map to='times'>
              <bucket>177</bucket>
            </map>
            <map to='times'>
              <bucket>253</bucket>
            </map>
            <map to='times'>
              <bucket>390</bucket>
            </map>
            <map to='times'>
              <bucket>537</bucket>
            </map>
            <map to='times'>
              <bucket>1117</bucket>
            </map>
            <map to='times'>
              <bucket>3920</bucket>
            </map>
            <map to='triangle'>
              <bucket>7</bucket>
            </map>
            <map to='triangle'>
              <bucket>18</bucket>
            </map>
            <map to='triangle'>
              <bucket>32</bucket>
            </map>
            <map to='triangle'>
              <bucket>52</bucket>
            </map>
            <map to='triangle'>
              <bucket>68</bucket>
            </map>
            <map to='triangle'>
              <bucket>85</bucket>
            </map>
            <map to='triangle'>
              <bucket>141</bucket>
            </map>
            <map to='triangle'>
              <bucket>218</bucket>
            </map>
            <map to='triangle'>
              <bucket>309</bucket>
            </map>
            <map to='triangle'>
              <bucket>426</bucket>
            </map>
            <map to='triangle'>
              <bucket>744</bucket>
            </map>
            <map to='triangle'>
              <bucket>1798</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:room_type:nk]' palette='seattle_grays_10_0' type='palette'>
            <map to='#4f6980'>
              <bucket>&quot;Entire home/apt&quot;</bucket>
            </map>
            <map to='#638b66'>
              <bucket>&quot;Shared room&quot;</bucket>
            </map>
            <map to='#b3b7b8'>
              <bucket>&quot;Private room&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <datasource-dependencies datasource='Parameters'>
        <column caption='Radial Inner' datatype='real' name='[Parameter 2]' param-domain-type='any' role='measure' type='quantitative' value='0.5'>
          <calculation class='tableau' formula='0.5' />
        </column>
        <column caption='Radial Outer' datatype='real' name='[Parameter 3]' param-domain-type='any' role='measure' type='quantitative' value='1.0'>
          <calculation class='tableau' formula='1.0' />
        </column>
      </datasource-dependencies>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <actions>
    <action caption='Filter by Neighbourhood' name='[Action1]'>
      <activation type='on-select' />
      <source dashboard='Dashboard 1' type='sheet' worksheet='Map' />
      <command command='tsc:tsl-filter'>
        <param name='exclude' value='Distance from City Centre,Radial Graph' />
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard 1' />
      </command>
    </action>
    <action caption='Filter1' name='[Action2]'>
      <activation auto-clear='true' type='on-select' />
      <source datasource='federated.1qo3cr50d39wam1102h3h1os14q7' type='datasource'>
        <exclude-sheet name='Aggregated Stats' />
        <exclude-sheet name='Aggregated Stats (2)' />
        <exclude-sheet name='Radial Graph' />
        <exclude-sheet name='Distance from City Centre' />
        <exclude-sheet name='Room Type' />
      </source>
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Radial Graph' />
      </command>
    </action>
    <action caption='Filter2' name='[Action3]'>
      <activation auto-clear='true' type='on-select' />
      <source datasource='federated.1qo3cr50d39wam1102h3h1os14q7' type='datasource'>
        <exclude-sheet name='Aggregated Stats' />
        <exclude-sheet name='Aggregated Stats (2)' />
        <exclude-sheet name='Map' />
        <exclude-sheet name='Distance from City Centre' />
      </source>
      <command command='tsc:tsl-filter'>
        <param name='exclude' value='Aggregated Stats,Distance from City Centre' />
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard 1' />
      </command>
    </action>
    <action caption='Filter3' name='[Action4]'>
      <activation auto-clear='true' type='on-select' />
      <source datasource='federated.1qo3cr50d39wam1102h3h1os14q7' type='datasource'>
        <exclude-sheet name='Aggregated Stats' />
        <exclude-sheet name='Aggregated Stats (2)' />
        <exclude-sheet name='Map' />
        <exclude-sheet name='Radial Graph' />
        <exclude-sheet name='Room Type' />
      </source>
      <command command='tsc:tsl-filter'>
        <param name='exclude' value='Aggregated Stats' />
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard 1' />
      </command>
    </action>
    <action caption='Filter4' name='[Action5]'>
      <activation type='on-select' />
      <source datasource='federated.1qo3cr50d39wam1102h3h1os14q7' type='datasource'>
        <exclude-sheet name='Aggregated Stats' />
        <exclude-sheet name='Aggregated Stats (2)' />
        <exclude-sheet name='Map' />
        <exclude-sheet name='Radial Graph' />
        <exclude-sheet name='Room Type' />
      </source>
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Aggregated Stats' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='Aggregated Stats'>
      <table>
        <view>
          <datasources>
            <datasource caption='AB_NYC_2019' name='federated.1qo3cr50d39wam1102h3h1os14q7' />
          </datasources>
          <datasource-dependencies datasource='federated.1qo3cr50d39wam1102h3h1os14q7'>
            <column caption='Popularity' datatype='integer' datatype-customized='true' name='[Calculation_1787366158423248908]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='INT(Round(((AVG([number_of_reviews]) - Min([Number of Records]))/(Max([number_of_reviews]) - Min([Number of Records])))*10))' />
            </column>
            <column caption='Percentage Availability' datatype='real' name='[Calculation_1787366158453080082]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([availability_365]/365)*100' />
            </column>
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column caption='Availability 365' datatype='integer' name='[availability_365]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_1787366158453080082]' derivation='Avg' name='[avg:Calculation_1787366158453080082:qk]' pivot='key' type='quantitative' />
            <column-instance column='[price]' derivation='Avg' name='[avg:price:qk]' pivot='key' type='quantitative' />
            <column caption='Neighbourhood' datatype='string' name='[neighbourhood]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;Clifton&quot;' value='Distance to City Centre' />
              </aliases>
            </column>
            <column caption='Neighbourhood Group' datatype='string' name='[neighbourhood_group]' role='dimension' type='nominal' />
            <column-instance column='[neighbourhood]' derivation='None' name='[none:neighbourhood:nk]' pivot='key' type='nominal' />
            <column-instance column='[neighbourhood_group]' derivation='None' name='[none:neighbourhood_group:nk]' pivot='key' type='nominal' />
            <column caption='Number Of Reviews' datatype='integer' name='[number_of_reviews]' role='measure' type='quantitative' />
            <column caption='Price' datatype='integer' name='[price]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_1787366158423248908]' derivation='User' name='[usr:Calculation_1787366158423248908:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1qo3cr50d39wam1102h3h1os14q7].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1qo3cr50d39wam1102h3h1os14q7].[avg:price:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1qo3cr50d39wam1102h3h1os14q7].[usr:Calculation_1787366158423248908:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1qo3cr50d39wam1102h3h1os14q7].[avg:Calculation_1787366158453080082:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.1qo3cr50d39wam1102h3h1os14q7].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.1qo3cr50d39wam1102h3h1os14q7].[avg:price:qk]&quot;</bucket>
              <bucket>&quot;[federated.1qo3cr50d39wam1102h3h1os14q7].[usr:Calculation_1787366158423248908:qk]&quot;</bucket>
              <bucket>&quot;[federated.1qo3cr50d39wam1102h3h1os14q7].[avg:Calculation_1787366158453080082:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.1qo3cr50d39wam1102h3h1os14q7].[Action (Neighbourhood,Neighbourhood Group)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action1]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[neighbourhood]' member='&quot;Long Island City&quot;' />
              <groupfilter function='member' level='[neighbourhood_group]' member='&quot;Queens&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1qo3cr50d39wam1102h3h1os14q7].[none:neighbourhood:nk]'>
            <groupfilter function='level-members' level='[none:neighbourhood:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1qo3cr50d39wam1102h3h1os14q7].[:Measure Names]</column>
            <column>[federated.1qo3cr50d39wam1102h3h1os14q7].[none:neighbourhood:nk]</column>
            <column>[federated.1qo3cr50d39wam1102h3h1os14q7].[Action (Neighbourhood,Neighbourhood Group)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='display' class='0' field='[federated.1qo3cr50d39wam1102h3h1os14q7].[avg:price:qk]' scope='rows' value='false' />
            <format attr='display' class='0' field='[federated.1qo3cr50d39wam1102h3h1os14q7].[usr:Calculation_1787366158423248908:qk]' scope='rows' value='false' />
            <format attr='stroke-size' scope='rows' value='0' />
            <format attr='tick-color' value='#00000000' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='height' field='[federated.1qo3cr50d39wam1102h3h1os14q7].[:Measure Names]' value='25' />
            <format attr='width' field='[federated.1qo3cr50d39wam1102h3h1os14q7].[none:neighbourhood:nk]' value='200' />
            <format attr='color' data-class='subtotal' scope='rows' value='#000000' />
            <format attr='cell-w' value='140' />
            <format attr='cell-h' value='20' />
            <format attr='cell' value='20' />
            <format attr='cell-q' value='100' />
            <format attr='font-size' data-class='subtotal' scope='rows' value='12' />
            <format attr='color' field='[federated.1qo3cr50d39wam1102h3h1os14q7].[:Measure Names]' value='#000000' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[federated.1qo3cr50d39wam1102h3h1os14q7].[:Measure Names]' value='284' />
            <format attr='height' field='[federated.1qo3cr50d39wam1102h3h1os14q7].[none:neighbourhood:nk]' value='24' />
            <format attr='border-width' data-class='subtotal' scope='rows' value='0' />
            <format attr='border-style' data-class='subtotal' scope='rows' value='none' />
            <format attr='band-color' scope='rows' value='#00000000' />
          </style-rule>
          <style-rule element='label'>
            <format attr='color' scope='rows' value='#ffffff' />
            <format attr='font-size' scope='rows' value='12' />
            <format attr='font-size' field='[federated.1qo3cr50d39wam1102h3h1os14q7].[none:neighbourhood:nk]' value='12' />
            <format attr='font-weight' field='[federated.1qo3cr50d39wam1102h3h1os14q7].[none:neighbourhood:nk]' value='bold' />
            <format attr='color' field='[federated.1qo3cr50d39wam1102h3h1os14q7].[:Measure Names]' value='#ffffff' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='border-width' data-class='subtotal' scope='rows' value='0' />
            <format attr='border-style' data-class='subtotal' scope='rows' value='none' />
            <format attr='band-color' scope='rows' value='#00000000' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#00000000' />
            <format attr='band-size' scope='rows' value='1' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
            <format attr='color' value='#ffffff' />
          </style-rule>
          <style-rule element='dropline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='stroke-size' scope='rows' value='0' />
            <format attr='line-visibility' scope='rows' value='off' />
          </style-rule>
          <style-rule element='zeroline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='table-div'>
            <format attr='stroke-size' scope='rows' value='0' />
            <format attr='line-visibility' scope='rows' value='off' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1qo3cr50d39wam1102h3h1os14q7].[none:neighbourhood_group:nk]' />
              <text column='[federated.1qo3cr50d39wam1102h3h1os14q7].[Multiple Values]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run bold='true' fontsize='12'>&lt;</run>
                <run bold='true' fontsize='12'>[federated.1qo3cr50d39wam1102h3h1os14q7].[Multiple Values]</run>
                <run bold='true' fontsize='12'>&gt;</run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='aspect' value='0' />
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1qo3cr50d39wam1102h3h1os14q7].[:Measure Names]</rows>
        <cols>[federated.1qo3cr50d39wam1102h3h1os14q7].[none:neighbourhood:nk]</cols>
      </table>
      <simple-id uuid='{6E5115EC-FD3B-4F73-935C-D22FD9E59E2C}' />
    </worksheet>
    <worksheet name='Aggregated Stats (2)'>
      <table>
        <view>
          <datasources>
            <datasource caption='AB_NYC_2019' name='federated.1qo3cr50d39wam1102h3h1os14q7' />
          </datasources>
          <datasource-dependencies datasource='federated.1qo3cr50d39wam1102h3h1os14q7'>
            <column aggregation='Sum' caption='Path Order' datatype='integer' name='[Calculation_1787366158381551621]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='IIF([Table Name] = &quot;AB_NYC_2019.csv&quot; , 0, 1)' />
            </column>
            <column caption='Popularity' datatype='integer' datatype-customized='true' name='[Calculation_1787366158423248908]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='INT(Round(((AVG([number_of_reviews]) - Min([Number of Records]))/(Max([number_of_reviews]) - Min([Number of Records])))*10))' />
            </column>
            <column caption='Percentage Availability' datatype='real' name='[Calculation_1787366158453080082]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([availability_365]/365)*100' />
            </column>
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column datatype='string' name='[Table Name]' role='dimension' type='nominal' />
            <column caption='Availability 365' datatype='integer' name='[availability_365]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_1787366158453080082]' derivation='Avg' name='[avg:Calculation_1787366158453080082:qk]' pivot='key' type='quantitative' />
            <column-instance column='[price]' derivation='Avg' name='[avg:price:qk]' pivot='key' type='quantitative' />
            <column caption='Id' datatype='integer' name='[id]' role='dimension' type='ordinal' />
            <column caption='Minimum Nights' datatype='integer' name='[minimum_nights]' role='measure' type='quantitative' />
            <column caption='Name' datatype='string' name='[name]' role='dimension' type='nominal' />
            <column caption='Neighbourhood' datatype='string' name='[neighbourhood]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;Clifton&quot;' value='Distance to City Centre' />
              </aliases>
            </column>
            <column caption='Neighbourhood Group' datatype='string' name='[neighbourhood_group]' role='dimension' type='nominal' />
            <column-instance column='[id]' derivation='None' name='[none:id:ok]' pivot='key' type='ordinal' />
            <column-instance column='[name]' derivation='None' name='[none:name:nk]' pivot='key' type='nominal' />
            <column-instance column='[neighbourhood]' derivation='None' name='[none:neighbourhood:nk]' pivot='key' type='nominal' />
            <column caption='Number Of Reviews' datatype='integer' name='[number_of_reviews]' role='measure' type='quantitative' />
            <column caption='Price' datatype='integer' name='[price]' role='measure' type='quantitative' />
            <column-instance column='[minimum_nights]' derivation='Sum' name='[sum:minimum_nights:qk]' pivot='key' type='quantitative' />
            <column-instance column='[number_of_reviews]' derivation='Sum' name='[sum:number_of_reviews:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1787366158423248908]' derivation='User' name='[usr:Calculation_1787366158423248908:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1qo3cr50d39wam1102h3h1os14q7].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1qo3cr50d39wam1102h3h1os14q7].[avg:price:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1qo3cr50d39wam1102h3h1os14q7].[avg:Calculation_1787366158453080082:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1qo3cr50d39wam1102h3h1os14q7].[sum:minimum_nights:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1qo3cr50d39wam1102h3h1os14q7].[sum:number_of_reviews:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.1qo3cr50d39wam1102h3h1os14q7].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.1qo3cr50d39wam1102h3h1os14q7].[avg:price:qk]&quot;</bucket>
              <bucket>&quot;[federated.1qo3cr50d39wam1102h3h1os14q7].[usr:Calculation_1787366158423248908:qk]&quot;</bucket>
              <bucket>&quot;[federated.1qo3cr50d39wam1102h3h1os14q7].[avg:Calculation_1787366158453080082:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.1qo3cr50d39wam1102h3h1os14q7].[Tooltip (Path Order,Id,Neighbourhood Group)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action - Aggregated Stats (2)]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Calculation_1787366158381551621]' />
              <groupfilter function='level-members' level='[id]' />
              <groupfilter function='level-members' level='[neighbourhood_group]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1qo3cr50d39wam1102h3h1os14q7].[none:id:ok]'>
            <groupfilter function='level-members' level='[none:id:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1qo3cr50d39wam1102h3h1os14q7].[:Measure Names]</column>
            <column>[federated.1qo3cr50d39wam1102h3h1os14q7].[none:id:ok]</column>
            <column>[federated.1qo3cr50d39wam1102h3h1os14q7].[Tooltip (Path Order,Id,Neighbourhood Group)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='display' class='0' field='[federated.1qo3cr50d39wam1102h3h1os14q7].[avg:price:qk]' scope='rows' value='false' />
            <format attr='display' class='0' field='[federated.1qo3cr50d39wam1102h3h1os14q7].[usr:Calculation_1787366158423248908:qk]' scope='rows' value='false' />
            <format attr='stroke-size' scope='rows' value='0' />
            <format attr='tick-color' value='#00000000' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='height' field='[federated.1qo3cr50d39wam1102h3h1os14q7].[:Measure Names]' value='50' />
            <format attr='width' field='[federated.1qo3cr50d39wam1102h3h1os14q7].[none:neighbourhood:nk]' value='200' />
            <format attr='width' field='[federated.1qo3cr50d39wam1102h3h1os14q7].[none:name:nk]' value='257' />
            <format attr='color' data-class='subtotal' scope='rows' value='#000000' />
            <format attr='cell-w' value='140' />
            <format attr='cell-h' value='40' />
            <format attr='cell' value='20' />
            <format attr='cell-q' value='100' />
            <format attr='font-size' data-class='subtotal' scope='rows' value='12' />
            <format attr='color' field='[federated.1qo3cr50d39wam1102h3h1os14q7].[:Measure Names]' value='#000000' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[federated.1qo3cr50d39wam1102h3h1os14q7].[:Measure Names]' value='284' />
            <format attr='height' field='[federated.1qo3cr50d39wam1102h3h1os14q7].[none:neighbourhood:nk]' value='24' />
            <format attr='border-width' data-class='subtotal' scope='rows' value='0' />
            <format attr='border-style' data-class='subtotal' scope='rows' value='none' />
            <format attr='band-color' scope='rows' value='#000000' />
          </style-rule>
          <style-rule element='label'>
            <format attr='color' scope='rows' value='#ffffff' />
            <format attr='font-size' scope='rows' value='12' />
            <format attr='font-weight' field='[federated.1qo3cr50d39wam1102h3h1os14q7].[none:neighbourhood:nk]' value='bold' />
            <format attr='color' field='[federated.1qo3cr50d39wam1102h3h1os14q7].[:Measure Names]' value='#ffffff' />
            <format attr='font-size' field='[federated.1qo3cr50d39wam1102h3h1os14q7].[:Measure Names]' value='8' />
            <format attr='font-size' field='[federated.1qo3cr50d39wam1102h3h1os14q7].[none:neighbourhood:nk]' value='8' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='border-width' data-class='subtotal' scope='rows' value='0' />
            <format attr='border-style' data-class='subtotal' scope='rows' value='none' />
            <format attr='band-color' scope='rows' value='#000000' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#000000' />
            <format attr='band-size' scope='rows' value='1' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
            <format attr='color' value='#ffffff' />
          </style-rule>
          <style-rule element='dropline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='stroke-size' scope='rows' value='0' />
            <format attr='line-visibility' scope='rows' value='off' />
          </style-rule>
          <style-rule element='zeroline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='table-div'>
            <format attr='stroke-size' scope='rows' value='0' />
            <format attr='line-visibility' scope='rows' value='off' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1qo3cr50d39wam1102h3h1os14q7].[Multiple Values]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run bold='true' fontsize='8'>&lt;</run>
                <run bold='true' fontsize='8'>[federated.1qo3cr50d39wam1102h3h1os14q7].[Multiple Values]</run>
                <run bold='true' fontsize='8'>&gt;</run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='aspect' value='0' />
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1qo3cr50d39wam1102h3h1os14q7].[:Measure Names]</rows>
        <cols>([federated.1qo3cr50d39wam1102h3h1os14q7].[none:name:nk] / [federated.1qo3cr50d39wam1102h3h1os14q7].[none:neighbourhood:nk])</cols>
      </table>
      <simple-id uuid='{AFFD28D4-D844-4196-9677-991A631946C7}' />
    </worksheet>
    <worksheet name='Distance from City Centre'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontsize='10'>Distance from City Centre</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='AB_NYC_2019' name='federated.1qo3cr50d39wam1102h3h1os14q7' />
          </datasources>
          <datasource-dependencies datasource='federated.1qo3cr50d39wam1102h3h1os14q7'>
            <column caption='Distance' datatype='real' datatype-customized='true' name='[Calculation_1787366158370811905]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='ACOS((SIN(RADIANS(LOOKUP(AVG([latitude]), First())))&#13;&#10;* SIN(RADIANS(AVG([latitude]))) + COS(RADIANS(LOOKUP(AVG([latitude]), First()))) * COS(RADIANS(AVG([latitude]))) *&#13;&#10;COS(RADIANS(AVG([longitude])) - RADIANS(LOOKUP(AVG([longitude]), First()))) ))*3959'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column aggregation='Avg' caption='Latitude' datatype='real' name='[latitude]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
            <column aggregation='Avg' caption='Longitude' datatype='real' name='[longitude]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
            <column caption='Neighbourhood' datatype='string' name='[neighbourhood]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;Clifton&quot;' value='Distance to City Centre' />
              </aliases>
            </column>
            <column caption='Neighbourhood Group' datatype='string' name='[neighbourhood_group]' role='dimension' type='nominal' />
            <column-instance column='[neighbourhood]' derivation='None' name='[none:neighbourhood:nk]' pivot='key' type='nominal' />
            <column-instance column='[neighbourhood_group]' derivation='None' name='[none:neighbourhood_group:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1787366158370811905]' derivation='User' name='[usr:Calculation_1787366158370811905:qk:3]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[federated.1qo3cr50d39wam1102h3h1os14q7].[none:neighbourhood:nk]' ordering-type='Field' />
            </column-instance>
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1qo3cr50d39wam1102h3h1os14q7].[none:neighbourhood:nk]' kind='hide'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:neighbourhood:nk]' />
              <groupfilter function='member' level='[none:neighbourhood:nk]' member='&quot;Chelsea&quot;' />
            </groupfilter>
          </filter>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1qo3cr50d39wam1102h3h1os14q7].[usr:Calculation_1787366158370811905:qk:3]' scope='rows' value='Distance from City Centre' />
            <encoding attr='space' class='0' field='[federated.1qo3cr50d39wam1102h3h1os14q7].[usr:Calculation_1787366158370811905:qk:3]' field-type='quantitative' max='15.403281852855624' min='-3.7974348001755001' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='header'>
            <format attr='background-color' scope='cols' value='#000000' />
            <format attr='band-color' scope='rows' value='#000000' />
          </style-rule>
          <style-rule element='label'>
            <format attr='color' value='#ffffff' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='background-color' data-class='subtotal' scope='cols' value='#000000' />
            <format attr='band-color' scope='cols' value='#000000' />
            <format attr='band-color' scope='rows' value='#000000' />
          </style-rule>
          <style-rule element='table'>
            <format attr='band-size' scope='cols' value='1' />
            <format attr='background-color' value='#000000' />
            <format attr='band-size' scope='rows' value='1' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='rows' value='false' />
            <format attr='color' value='#ffffff' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='line-visibility' value='on' />
            <format attr='line-pattern-only' value='dotted' />
          </style-rule>
          <style-rule element='zeroline'>
            <format attr='line-pattern-only' value='dotted' />
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='title'>
            <format attr='background-color' value='#000000' />
            <format attr='color' value='#ffffff' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <color column='[federated.1qo3cr50d39wam1102h3h1os14q7].[none:neighbourhood_group:nk]' />
              <lod column='[federated.1qo3cr50d39wam1102h3h1os14q7].[none:neighbourhood:nk]' />
            </encodings>
            <reference-line axis-column='[federated.1qo3cr50d39wam1102h3h1os14q7].[usr:Calculation_1787366158370811905:qk:3]' boxplot-mark-exclusion='false' boxplot-whisker-type='standard' enable-instant-analytics='true' formula='average' id='refline0' label-type='automatic' probability='95' scope='per-cell' symmetric='false' value-column='[federated.1qo3cr50d39wam1102h3h1os14q7].[usr:Calculation_1787366158370811905:qk:3]' z-order='1' />
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.25' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1qo3cr50d39wam1102h3h1os14q7].[usr:Calculation_1787366158370811905:qk:3]</rows>
        <cols />
      </table>
      <simple-id uuid='{E7AD5B2F-9C66-4F6C-B745-84ABE1B0C677}' />
    </worksheet>
    <worksheet name='Map'>
      <table>
        <view>
          <datasources>
            <datasource caption='AB_NYC_2019' name='federated.1qo3cr50d39wam1102h3h1os14q7' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1qo3cr50d39wam1102h3h1os14q7'>
            <column caption='Check Centre' datatype='integer' name='[Calculation_1787366158370357248]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [neighbourhood] == [Calculation_686798999819374593]&#13;&#10;THEN 1 ELSE 2 END' />
            </column>
            <column aggregation='Sum' caption='Path Order' datatype='integer' name='[Calculation_1787366158381551621]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='IIF([Table Name] = &quot;AB_NYC_2019.csv&quot; , 0, 1)' />
            </column>
            <column caption='Chelsea' datatype='string' name='[Calculation_686798999819374593]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='&quot;Chelsea&quot;' />
            </column>
            <column datatype='string' name='[Table Name]' role='dimension' type='nominal' />
            <column-instance column='[latitude]' derivation='Avg' name='[avg:latitude:qk]' pivot='key' type='quantitative' />
            <column-instance column='[longitude]' derivation='Avg' name='[avg:longitude:qk]' pivot='key' type='quantitative' />
            <column caption='Id' datatype='integer' name='[id]' role='dimension' type='ordinal' />
            <column aggregation='Avg' caption='Latitude' datatype='real' name='[latitude]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
            <column aggregation='Avg' caption='Longitude' datatype='real' name='[longitude]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
            <column-instance column='[Calculation_1787366158370357248]' derivation='Min' name='[min:Calculation_1787366158370357248:ok]' pivot='key' type='ordinal' />
            <column caption='Neighbourhood' datatype='string' name='[neighbourhood]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;Clifton&quot;' value='Distance to City Centre' />
              </aliases>
            </column>
            <column caption='Neighbourhood Group' datatype='string' name='[neighbourhood_group]' role='dimension' type='nominal' />
            <column-instance column='[neighbourhood]' derivation='None' name='[none:neighbourhood:nk]' pivot='key' type='nominal' />
            <column-instance column='[neighbourhood_group]' derivation='None' name='[none:neighbourhood_group:nk]' pivot='key' type='nominal' />
            <column caption='Room Type' datatype='string' name='[room_type]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1qo3cr50d39wam1102h3h1os14q7].[Action (Neighbourhood,Neighbourhood Group)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action4]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[neighbourhood]' />
              <groupfilter function='level-members' level='[neighbourhood_group]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1qo3cr50d39wam1102h3h1os14q7].[Action (Path Order,Id,Neighbourhood Group)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action3]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Calculation_1787366158381551621]' />
              <groupfilter function='level-members' level='[id]' />
              <groupfilter function='level-members' level='[neighbourhood_group]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1qo3cr50d39wam1102h3h1os14q7].[Action (Room Type)]'>
            <groupfilter function='level-members' level='[room_type]' user:ui-action-filter='[Action3]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1qo3cr50d39wam1102h3h1os14q7].[Action (Path Order,Id,Neighbourhood Group)]</column>
            <column>[federated.1qo3cr50d39wam1102h3h1os14q7].[Action (Room Type)]</column>
            <column>[federated.1qo3cr50d39wam1102h3h1os14q7].[Action (Neighbourhood,Neighbourhood Group)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='tick-color' value='#00000000' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='border-width' value='0' />
            <format attr='border-style' data-class='total' scope='cols' value='none' />
            <format attr='border-style' data-class='total' scope='rows' value='none' />
          </style-rule>
          <style-rule element='dropline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='table-div'>
            <format attr='stroke-size' scope='rows' value='0' />
            <format attr='line-visibility' scope='rows' value='off' />
            <format attr='stroke-size' scope='cols' value='0' />
            <format attr='line-visibility' scope='cols' value='off' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='b01002_001e' value='false' />
            <format attr='enabled' id='b01002_002e' value='false' />
            <format attr='enabled' id='b01002_003e' value='false' />
            <format attr='enabled' id='dp02_0001e' value='false' />
            <format attr='enabled' id='dp02_0015e' value='false' />
            <format attr='enabled' id='dp03_0027e_plus_dp03_0029e' value='false' />
            <format attr='enabled' id='dp03_0028e' value='false' />
            <format attr='enabled' id='dp03_0030e_plus_dp03_0031e' value='false' />
            <format attr='enabled' id='dp03_0062e' value='false' />
            <format attr='enabled' id='dp03_0088e' value='false' />
            <format attr='enabled' id='dp04_0001e' value='false' />
            <format attr='enabled' id='dp04_0046e' value='false' />
            <format attr='enabled' id='dp04_0047e' value='false' />
            <format attr='enabled' id='dp04_0089e' value='false' />
            <format attr='enabled' id='dp05_0001e' value='false' />
            <format attr='enabled' id='dp05_0002e_div_dp05_0003e' value='false' />
            <format attr='enabled' id='dp05_0032e' value='false' />
            <format attr='enabled' id='dp05_0033e' value='false' />
            <format attr='enabled' id='dp05_0034e' value='false' />
            <format attr='enabled' id='dp05_0039e' value='false' />
            <format attr='enabled' id='dp05_0047e' value='false' />
            <format attr='enabled' id='dp05_0053e' value='false' />
            <format attr='enabled' id='dp05_0066e' value='false' />
            <format attr='enabled' id='dp05_0077e' value='false' />
            <format attr='enabled' id='admin-0-boundaries-bg-sub' value='false' />
            <format attr='enabled' id='admin-1-boundaries-sm-parents-bg' value='false' />
            <format attr='enabled' id='admin-1-boundaries-md-parents-bg' value='false' />
            <format attr='enabled' id='admin-1-boundaries-lg-parents-bg' value='false' />
            <format attr='enabled' id='admin-0-boundaries-dispute-sub' value='false' />
            <format attr='enabled' id='admin-0-boundaries-sub' value='false' />
            <format attr='enabled' id='admin-1-boundaries-supress' value='false' />
            <format attr='enabled' id='admin-1-boundaries-sm-parents' value='false' />
            <format attr='enabled' id='admin-1-boundaries-md-parents' value='false' />
            <format attr='enabled' id='admin-1-boundaries-lg-parents' value='false' />
            <format attr='enabled' id='admin1-water-lines-usa-tableau' value='false' />
            <format attr='enabled' id='9-dash-line-casing' value='false' />
            <format attr='enabled' id='9-dash-line' value='false' />
            <format attr='enabled' id='admin-1-label-9th-tier' value='false' />
            <format attr='enabled' id='admin-1-label-8th-tier' value='false' />
            <format attr='enabled' id='admin-1-label-7th-tier' value='false' />
            <format attr='enabled' id='admin-1-label-6th-tier' value='false' />
            <format attr='enabled' id='admin-1-label-5th-tier' value='false' />
            <format attr='enabled' id='admin-1-label-4th-tier' value='false' />
            <format attr='enabled' id='admin-1-label-3rd-tier' value='false' />
            <format attr='enabled' id='admin-1-label-2nd-tier' value='false' />
            <format attr='enabled' id='admin-1-label-1st-tier' value='false' />
            <format attr='enabled' id='us-admin-1-label-abbr-3rd-tier' value='false' />
            <format attr='enabled' id='us-admin-1-label-abbr-2nd-tier' value='false' />
            <format attr='enabled' id='us-admin-1-label-abbr-1st-tier' value='false' />
            <format attr='enabled' id='admin-0-label-5th-tier' value='false' />
            <format attr='enabled' id='admin-0-label-4th-tier' value='false' />
            <format attr='enabled' id='admin-0-label-3rd-tier' value='false' />
            <format attr='enabled' id='admin-0-label-2nd-tier' value='false' />
            <format attr='enabled' id='admin-0-label-1st-tier' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0' />
            <format attr='map-style' value='dark' />
          </style-rule>
          <style-rule element='map-data-layer'>
            <format attr='palette' value='tableau-map-blue-green-light' />
            <format attr='geo-area-type' value='State' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Shape' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1qo3cr50d39wam1102h3h1os14q7].[none:neighbourhood_group:nk]' />
              <shape column='[federated.1qo3cr50d39wam1102h3h1os14q7].[min:Calculation_1787366158370357248:ok]' />
              <lod column='[federated.1qo3cr50d39wam1102h3h1os14q7].[none:neighbourhood:nk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Neighbourhood:&#9;</run>
                <run bold='true'>&lt;[federated.1qo3cr50d39wam1102h3h1os14q7].[none:neighbourhood:nk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Area:&#9;</run>
                <run bold='true'>&lt;[federated.1qo3cr50d39wam1102h3h1os14q7].[none:neighbourhood_group:nk]&gt;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
                <format attr='size' value='1.1974033117294312' />
                <format attr='density-kernel-size' value='1.5272375345230103' />
              </style-rule>
              <style-rule element='trendline'>
                <format attr='stroke-size' value='0' />
                <format attr='line-visibility' value='off' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1qo3cr50d39wam1102h3h1os14q7].[avg:latitude:qk]</rows>
        <cols>[federated.1qo3cr50d39wam1102h3h1os14q7].[avg:longitude:qk]</cols>
      </table>
      <simple-id uuid='{58D27272-FD4F-4D79-8E25-693CEEC0E85A}' />
    </worksheet>
    <worksheet name='Radial Graph'>
      <table>
        <view>
          <datasources>
            <datasource caption='AB_NYC_2019' name='federated.1qo3cr50d39wam1102h3h1os14q7' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Radial Inner' datatype='real' name='[Parameter 2]' param-domain-type='any' role='measure' type='quantitative' value='0.5'>
              <calculation class='tableau' formula='0.5' />
            </column>
            <column caption='Radial Outer' datatype='real' name='[Parameter 3]' param-domain-type='any' role='measure' type='quantitative' value='1.0'>
              <calculation class='tableau' formula='1.0' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1qo3cr50d39wam1102h3h1os14q7'>
            <column aggregation='Sum' caption='Path Order' datatype='integer' name='[Calculation_1787366158381551621]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='IIF([Table Name] = &quot;AB_NYC_2019.csv&quot; , 0, 1)' />
            </column>
            <column caption='Radial Field' datatype='integer' name='[Calculation_1787366158382645254]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[price]' />
            </column>
            <column caption='Radial Angle' datatype='real' name='[Calculation_1787366158382911495]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(INDEX()-1) * (1/WINDOW_COUNT(COUNT([Calculation_1787366158382645254]))) * 2 * PI()'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Radial Normalised Length' datatype='real' name='[Calculation_1787366158383144968]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Parameters].[Parameter 2] + IIF(ATTR([Calculation_1787366158381551621]) = 0, 0, sum([Calculation_1787366158382645254])/WINDOW_MAX(sum([Calculation_1787366158382645254])) * ([Parameters].[Parameter 3]-[Parameters].[Parameter 2]))'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Radial X' datatype='real' name='[Calculation_1787366158383263753]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_1787366158383144968] * COS([Calculation_1787366158382911495])'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Radial Y' datatype='real' name='[Calculation_1787366158383366154]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_1787366158383144968] * SIN([Calculation_1787366158382911495])'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column datatype='string' name='[Table Name]' role='dimension' type='nominal' />
            <column caption='Id' datatype='integer' name='[id]' role='dimension' type='ordinal' />
            <column caption='Neighbourhood' datatype='string' name='[neighbourhood]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;Clifton&quot;' value='Distance to City Centre' />
              </aliases>
            </column>
            <column caption='Neighbourhood Group' datatype='string' name='[neighbourhood_group]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_1787366158381551621]' derivation='None' name='[none:Calculation_1787366158381551621:ok]' pivot='key' type='ordinal' />
            <column-instance column='[id]' derivation='None' name='[none:id:ok]' pivot='key' type='ordinal' />
            <column-instance column='[neighbourhood_group]' derivation='None' name='[none:neighbourhood_group:nk]' pivot='key' type='nominal' />
            <column caption='Price' datatype='integer' name='[price]' role='measure' type='quantitative' />
            <column caption='Room Type' datatype='string' name='[room_type]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_1787366158383263753]' derivation='User' name='[usr:Calculation_1787366158383263753:qk:7]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[federated.1qo3cr50d39wam1102h3h1os14q7].[id]' ordering-type='Field' />
              <table-calc field='[federated.1qo3cr50d39wam1102h3h1os14q7].[Calculation_1787366158383144968]' ordering-field='[federated.1qo3cr50d39wam1102h3h1os14q7].[id]' ordering-type='Field' />
              <table-calc field='[federated.1qo3cr50d39wam1102h3h1os14q7].[Calculation_1787366158382911495]' ordering-field='[federated.1qo3cr50d39wam1102h3h1os14q7].[id]' ordering-type='Field' />
            </column-instance>
            <column-instance column='[Calculation_1787366158383366154]' derivation='User' name='[usr:Calculation_1787366158383366154:qk:5]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[federated.1qo3cr50d39wam1102h3h1os14q7].[id]' ordering-type='Field' />
              <table-calc field='[federated.1qo3cr50d39wam1102h3h1os14q7].[Calculation_1787366158382911495]' ordering-field='[federated.1qo3cr50d39wam1102h3h1os14q7].[id]' ordering-type='Field' />
              <table-calc field='[federated.1qo3cr50d39wam1102h3h1os14q7].[Calculation_1787366158383144968]' ordering-field='[federated.1qo3cr50d39wam1102h3h1os14q7].[id]' ordering-type='Field' />
            </column-instance>
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1qo3cr50d39wam1102h3h1os14q7].[Action (Neighbourhood,Neighbourhood Group)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action2]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[neighbourhood]' />
              <groupfilter function='level-members' level='[neighbourhood_group]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1qo3cr50d39wam1102h3h1os14q7].[Action (Room Type)]'>
            <groupfilter function='level-members' level='[room_type]' user:ui-action-filter='[Action3]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1qo3cr50d39wam1102h3h1os14q7].[Action (Neighbourhood,Neighbourhood Group)]</column>
            <column>[federated.1qo3cr50d39wam1102h3h1os14q7].[Action (Room Type)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1qo3cr50d39wam1102h3h1os14q7].[usr:Calculation_1787366158383263753:qk:7]' field-type='quantitative' max='1.0' min='-1.0' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.1qo3cr50d39wam1102h3h1os14q7].[usr:Calculation_1787366158383366154:qk:5]' field-type='quantitative' max='1.0' min='-1.0' range-type='fixed' scope='rows' type='space' />
            <format attr='display' class='0' field='[federated.1qo3cr50d39wam1102h3h1os14q7].[usr:Calculation_1787366158383263753:qk:7]' scope='cols' value='false' />
            <format attr='display' class='0' field='[federated.1qo3cr50d39wam1102h3h1os14q7].[usr:Calculation_1787366158383366154:qk:5]' scope='rows' value='false' />
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
            <format attr='tick-color' value='#00000000' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#000000' />
          </style-rule>
          <style-rule element='dropline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='zeroline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='legend'>
            <format attr='color' value='#ffffff' />
          </style-rule>
          <style-rule element='legend-title'>
            <format attr='color' value='#ffffff' />
            <format attr='text-align' value='auto' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1qo3cr50d39wam1102h3h1os14q7].[none:neighbourhood_group:nk]' />
              <lod column='[federated.1qo3cr50d39wam1102h3h1os14q7].[none:id:ok]' />
              <path column='[federated.1qo3cr50d39wam1102h3h1os14q7].[none:Calculation_1787366158381551621:ok]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run bold='true' fontsize='8'>&lt;Sheet name=&quot;Aggregated Stats (2)&quot; maxwidth=&quot;800&quot; maxheight=&quot;300&quot; filter=&quot;&lt;All Fields&gt;&quot;&gt;</run>
                <run>Æ&#10;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='datalabel'>
                <format attr='color-mode' value='match' />
                <format attr='font-size' value='8' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-show' value='false' />
                <format attr='size' value='0.053977899253368378' />
              </style-rule>
              <style-rule element='trendline'>
                <format attr='stroke-size' value='0' />
                <format attr='line-visibility' value='off' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1qo3cr50d39wam1102h3h1os14q7].[usr:Calculation_1787366158383366154:qk:5]</rows>
        <cols>[federated.1qo3cr50d39wam1102h3h1os14q7].[usr:Calculation_1787366158383263753:qk:7]</cols>
      </table>
      <simple-id uuid='{386BD9CB-7469-45A8-A856-285E86EDF9E1}' />
    </worksheet>
    <worksheet name='Room Type'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontsize='10'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='AB_NYC_2019' name='federated.1qo3cr50d39wam1102h3h1os14q7' />
          </datasources>
          <datasource-dependencies datasource='federated.1qo3cr50d39wam1102h3h1os14q7'>
            <column aggregation='Sum' caption='Path Order' datatype='integer' name='[Calculation_1787366158381551621]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='IIF([Table Name] = &quot;AB_NYC_2019.csv&quot; , 0, 1)' />
            </column>
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column datatype='string' name='[Table Name]' role='dimension' type='nominal' />
            <column caption='Id' datatype='integer' name='[id]' role='dimension' type='ordinal' />
            <column caption='Neighbourhood' datatype='string' name='[neighbourhood]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;Clifton&quot;' value='Distance to City Centre' />
              </aliases>
            </column>
            <column caption='Neighbourhood Group' datatype='string' name='[neighbourhood_group]' role='dimension' type='nominal' />
            <column-instance column='[neighbourhood]' derivation='None' name='[none:neighbourhood:nk]' pivot='key' type='nominal' />
            <column-instance column='[room_type]' derivation='None' name='[none:room_type:nk]' pivot='key' type='nominal' />
            <column caption='Room Type' datatype='string' name='[room_type]' role='dimension' type='nominal' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1qo3cr50d39wam1102h3h1os14q7].[Action (Neighbourhood,Neighbourhood Group)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action1]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[neighbourhood]' />
              <groupfilter function='level-members' level='[neighbourhood_group]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1qo3cr50d39wam1102h3h1os14q7].[Action (Path Order,Id,Neighbourhood Group)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action3]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Calculation_1787366158381551621]' />
              <groupfilter function='level-members' level='[id]' />
              <groupfilter function='level-members' level='[neighbourhood_group]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1qo3cr50d39wam1102h3h1os14q7].[none:neighbourhood:nk]'>
            <groupfilter function='level-members' level='[none:neighbourhood:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1qo3cr50d39wam1102h3h1os14q7].[none:neighbourhood:nk]</column>
            <column>[federated.1qo3cr50d39wam1102h3h1os14q7].[Action (Neighbourhood,Neighbourhood Group)]</column>
            <column>[federated.1qo3cr50d39wam1102h3h1os14q7].[Action (Path Order,Id,Neighbourhood Group)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1qo3cr50d39wam1102h3h1os14q7].[sum:Number of Records:qk]' scope='cols' value='Number of Listings' />
            <format attr='display' class='0' field='[federated.1qo3cr50d39wam1102h3h1os14q7].[sum:Number of Records:qk]' scope='cols' value='false' />
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
            <format attr='tick-color' value='#00000000' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='cell-w' value='60' />
            <format attr='cell-h' value='60' />
            <format attr='cell' value='20' />
            <format attr='cell-q' value='100' />
            <format attr='color' data-class='subtotal' value='#ffffff' />
          </style-rule>
          <style-rule element='label'>
            <format attr='color' value='#ffffff' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#000000' />
          </style-rule>
          <style-rule element='dropline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='stroke-size' scope='cols' value='0' />
            <format attr='line-visibility' scope='cols' value='off' />
          </style-rule>
          <style-rule element='zeroline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='title'>
            <format attr='color' value='#ffffff' />
          </style-rule>
          <style-rule element='legend'>
            <format attr='color' value='#ffffff' />
          </style-rule>
          <style-rule element='legend-title'>
            <format attr='color' value='#ffffff' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1qo3cr50d39wam1102h3h1os14q7].[none:room_type:nk]' />
              <text column='[federated.1qo3cr50d39wam1102h3h1os14q7].[sum:Number of Records:qk]' />
            </encodings>
            <style>
              <style-rule element='cell'>
                <format attr='text-orientation' value='0' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='aspect' value='0' />
              </style-rule>
              <style-rule element='trendline'>
                <format attr='stroke-size' value='0' />
                <format attr='line-visibility' value='off' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols>[federated.1qo3cr50d39wam1102h3h1os14q7].[sum:Number of Records:qk]</cols>
      </table>
      <simple-id uuid='{6412B1BD-D4AD-4230-90EF-EB197E840358}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='Dashboard 1'>
      <style />
      <size maxheight='1100' maxwidth='1400' minheight='1100' minwidth='1400' sizing-mode='fixed' />
      <zones>
        <zone h='100000' id='4' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='98546' id='27' param='horz' type='layout-flow' w='98858' x='571' y='727'>
            <zone h='98546' id='14' param='horz' type='layout-flow' w='98858' x='571' y='727'>
              <zone h='98546' id='11' param='vert' type='layout-flow' w='98858' x='571' y='727'>
                <zone h='98546' id='7' param='horz' type='layout-flow' w='98858' x='571' y='727'>
                  <zone h='98546' id='5' type='layout-basic' w='98858' x='571' y='727'>
                    <zone h='98546' id='3' name='Radial Graph' show-title='false' w='82988' x='571' y='727'>
                      <zone-style>
                        <format attr='border-color' value='#000000' />
                        <format attr='border-style' value='none' />
                        <format attr='border-width' value='0' />
                        <format attr='margin' value='4' />
                      </zone-style>
                    </zone>
                    <zone h='98546' id='25' name='Distance from City Centre' show-title='false' w='15870' x='83559' y='727'>
                      <zone-style>
                        <format attr='border-color' value='#000000' />
                        <format attr='border-style' value='none' />
                        <format attr='border-width' value='0' />
                        <format attr='margin' value='4' />
                      </zone-style>
                    </zone>
                  </zone>
                </zone>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
        <zone h='10545' id='15' name='Aggregated Stats' show-title='false' w='35143' x='47929' y='87182' />
        <zone h='15889' id='8' name='Radial Graph' pane-specification-id='0' param='[federated.1qo3cr50d39wam1102h3h1os14q7].[none:neighbourhood_group:nk]' type='color' w='14000' x='2267' y='3889' />
        <zone h='29250' id='9' name='Map' show-title='false' w='30364' x='25636' y='35125' />
        <zone forceUpdate='true' h='5455' id='18' type='text' w='22286' x='32286' y='2182'>
          <formatted-text>
            <run fontcolor='#e6e6e6' fontname='Calibri' fontsize='15'>New York City </run>
            <run fontcolor='#c30000' fontname='Calibri' fontsize='15'>airbnb</run>
            <run fontcolor='#ff0000' fontname='Calibri' fontsize='15'>Æ </run>
            <run fontcolor='#e6e6e6' fontname='Calibri' fontsize='15'>Listings</run>
          </formatted-text>
        </zone>
        <zone h='9000' id='28' name='Room Type' show-title='false' w='33357' x='1643' y='89000' />
        <zone h='8636' id='29' name='Room Type' pane-specification-id='0' param='[federated.1qo3cr50d39wam1102h3h1os14q7].[none:room_type:nk]' type='color' w='11929' x='1500' y='80182' />
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1300' minheight='1300' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='48' type='layout-basic' w='100000' x='0' y='0'>
              <zone h='98546' id='49' param='vert' type='layout-flow' w='98858' x='571' y='727'>
                <zone fixed-size='280' h='98546' id='3' is-fixed='true' name='Radial Graph' show-title='false' w='82988' x='571' y='727'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='15889' id='8' name='Radial Graph' pane-specification-id='0' param='[federated.1qo3cr50d39wam1102h3h1os14q7].[none:neighbourhood_group:nk]' type='color' w='14000' x='2267' y='3889'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='98546' id='25' is-fixed='true' name='Distance from City Centre' show-title='false' w='15870' x='83559' y='727'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone forceUpdate='true' h='5455' id='18' type='text' w='22286' x='32286' y='2182'>
                  <formatted-text>
                    <run fontcolor='#e6e6e6' fontname='Calibri' fontsize='15'>New York City </run>
                    <run fontcolor='#c30000' fontname='Calibri' fontsize='15'>airbnb</run>
                    <run fontcolor='#ff0000' fontname='Calibri' fontsize='15'>Æ </run>
                    <run fontcolor='#e6e6e6' fontname='Calibri' fontsize='15'>Listings</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='29250' id='9' is-fixed='true' name='Map' show-title='false' w='30364' x='25636' y='35125'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='116' h='10545' id='15' is-fixed='true' name='Aggregated Stats' show-title='false' w='35143' x='47929' y='87182'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='99' h='9000' id='28' is-fixed='true' name='Room Type' show-title='false' w='33357' x='1643' y='89000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='8636' id='29' name='Room Type' pane-specification-id='0' param='[federated.1qo3cr50d39wam1102h3h1os14q7].[none:room_type:nk]' type='color' w='11929' x='1500' y='80182'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{CA3ACC10-741E-4F10-9264-DDA16A8D3386}' />
    </dashboard>
  </dashboards>
  <windows saved-dpi-scale-factor='1.25' source-height='37'>
    <window class='worksheet' name='Map'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='compact' param='[Parameters].[Parameter 1]' type='parameter' />
            <card pane-specification-id='0' param='[federated.1qo3cr50d39wam1102h3h1os14q7].[min:Calculation_1787366158370357248:ok]' type='shape' />
            <card pane-specification-id='0' param='[federated.1qo3cr50d39wam1102h3h1os14q7].[none:neighbourhood_group:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1qo3cr50d39wam1102h3h1os14q7].[avg:price:qk]</field>
            <field>[federated.1qo3cr50d39wam1102h3h1os14q7].[min:Calculation_1787366158370357248:qk]</field>
            <field>[federated.1qo3cr50d39wam1102h3h1os14q7].[none:id:ok]</field>
            <field>[federated.1qo3cr50d39wam1102h3h1os14q7].[none:neighbourhood:nk]</field>
            <field>[federated.1qo3cr50d39wam1102h3h1os14q7].[none:neighbourhood_group:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{4D101B01-BF46-4236-86AB-93DAC4E1607C}' />
    </window>
    <window class='worksheet' name='Radial Graph'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1qo3cr50d39wam1102h3h1os14q7].[none:neighbourhood_group:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1qo3cr50d39wam1102h3h1os14q7].[none:Calculation_1787366158381551621:ok]</field>
            <field>[federated.1qo3cr50d39wam1102h3h1os14q7].[none:id:ok]</field>
            <field>[federated.1qo3cr50d39wam1102h3h1os14q7].[none:neighbourhood_group:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{761CE123-1D54-44D3-B5FE-784B63C69497}' />
    </window>
    <window class='worksheet' name='Aggregated Stats'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='300'>
            <card pane-specification-id='0' param='[federated.1qo3cr50d39wam1102h3h1os14q7].[none:neighbourhood_group:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1qo3cr50d39wam1102h3h1os14q7].[:Measure Names]</field>
            <field>[federated.1qo3cr50d39wam1102h3h1os14q7].[Multiple Values]</field>
            <field>[federated.1qo3cr50d39wam1102h3h1os14q7].[none:neighbourhood:nk]</field>
            <field>[federated.1qo3cr50d39wam1102h3h1os14q7].[none:neighbourhood_group:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{25114DF1-B21B-4D67-B8B8-3D2FAD71FB0D}' />
    </window>
    <window class='worksheet' name='Aggregated Stats (2)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1qo3cr50d39wam1102h3h1os14q7].[:Measure Names]</field>
            <field>[federated.1qo3cr50d39wam1102h3h1os14q7].[Multiple Values]</field>
            <field>[federated.1qo3cr50d39wam1102h3h1os14q7].[none:id:ok]</field>
            <field>[federated.1qo3cr50d39wam1102h3h1os14q7].[none:name:nk]</field>
            <field>[federated.1qo3cr50d39wam1102h3h1os14q7].[none:neighbourhood:nk]</field>
            <field>[federated.1qo3cr50d39wam1102h3h1os14q7].[none:neighbourhood_group:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{80C26390-30AE-4ADE-B732-FA73C7EB56C8}' />
    </window>
    <window class='worksheet' name='Room Type'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
          <strip size='160'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1qo3cr50d39wam1102h3h1os14q7].[none:room_type:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1qo3cr50d39wam1102h3h1os14q7].[none:neighbourhood:nk]</field>
            <field>[federated.1qo3cr50d39wam1102h3h1os14q7].[none:room_type:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{CC710D7C-BF3E-4F18-ABE8-0216E6C3B027}' />
    </window>
    <window class='worksheet' name='Distance from City Centre'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='compact' param='[Parameters].[Parameter 1]' type='parameter' />
            <card pane-specification-id='0' param='[federated.1qo3cr50d39wam1102h3h1os14q7].[none:neighbourhood_group:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1qo3cr50d39wam1102h3h1os14q7].[none:neighbourhood:nk]</field>
            <field>[federated.1qo3cr50d39wam1102h3h1os14q7].[none:neighbourhood_group:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{D610EF68-4807-4ADD-960C-34A5E4CEF7F5}' />
    </window>
    <window class='dashboard' maximized='true' name='Dashboard 1'>
      <viewpoints>
        <viewpoint name='Aggregated Stats' />
        <viewpoint name='Distance from City Centre'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Map'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Radial Graph'>
          <zoom type='entire-view' />
          <highlight field='[federated.1qo3cr50d39wam1102h3h1os14q7].[none:neighbourhood_group:nk]'>
            <bucket-selection />
          </highlight>
        </viewpoint>
        <viewpoint name='Room Type'>
          <highlight field='[federated.1qo3cr50d39wam1102h3h1os14q7].[none:room_type:nk]'>
            <bucket-selection />
          </highlight>
        </viewpoint>
      </viewpoints>
      <active id='3' />
      <simple-id uuid='{4082A939-AAB3-4FB3-AC45-40A873F1CB4E}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='103' name='Aggregated Stats' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAABnCAYAAABWxU1RAAAACXBIWXMAABJ0AAASdAHeZh94
      AAABLElEQVR4nO3TMQEAIAzAMMC/5yFjRxMFfXpnZg5Eve0A2GQA0gxAmgFIMwBpBiDNAKQZ
      gDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFI
      MwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQD
      kGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBp
      BiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA
      0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDtA73YBMr4xN7XAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Aggregated Stats (2)' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Dashboard 1' width='192'>
      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
      SUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Distance from City Centre' width='123'>
      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
      AElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Map' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Radial Graph' width='192'>
      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
    </thumbnail>
    <thumbnail height='64' name='Room Type' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAABACAYAAABMbHjfAAAACXBIWXMAABJ0AAASdAHeZh94
      AAADNklEQVR4nO3dT0iTcRzH8c/zqBtrzLTNCf65SLqMyEPWSbuUGIkQkXaIihKk0EOB/bEg
      KBYJFdlf6KBYGLk6VdeyLq6O0snQmQZt2IbZ/vTkJjwdAskNcy7nqO/ndXz4Mn4/2HvPBnue
      R9F1XQeRUGqmF0CUSQyARGMAJFp2/AFFUTKxDqKM4BmARGMAJBoDINEYAInGAEg0BkCiMQAS
      jQGQaAyARGMAJBoDINES/gsUr+Vq67JfdM+mvSkthmi18QxAojEAEo0BkGgMgERjACQaAyDR
      GACJxgBINAZAojEAEo0BkGgMgERjACQaAyDRGACJxgBItCUviCEZAoEATp08gUAgsOB4TW0t
      zpw7n/QMAEQiYfT19GLw1UvEYjEUl5TgeFs7NldVpX8jy8QACAAQ8PtRXlGB+z29MBgMKc+E
      w2FccTpRubES/QMuGI1GjHs8+Do9nc7lp4wBEIBfn+6W3NxF39jJzrxzu1FUXIQDBw/N32p/
      fXn5iq93pfA3AAEAPk1OwuHY8Fcz0WgUbvcQamq3/zPPmeAZgAAAXu9nPH7Uj9s3u6EoCqw2
      G5qa96Ouvh45OTlJzXyPRPBD0zAx8RF9vT0Y93igqiq2VFfjWFs7bDZbhneZSIl/SmR8ubwr
      hFyesTHc6r6BCxcvwWq1Ljmj6zq6nE6c7uyEvbBwfiYUCqHrshOHjxxFhcOxWstPCr8C0aLW
      5uXBYDDgT0/S/X3GbDbDZF4Dn8+3YMZisaCgwI7Z2dl0L3nZGAAhFotB07SE499mZqDrOrKz
      spKaMZlMKCsrw5vXgwuiCQWD8Pv9sFgsad1HKhgAIRgM4mxHB148f4ZQKARd1zE2Ooru69dQ
      vXUb8vLzk5oBgF27G/BhZARPXS7Mzc1B0zQ8cQ3AXmhHSWlphneaiL8BCADwZWoKDx/04e3Q
      EKLRKNZZrdjX1IyGxkaoqpr0DAD4vF7cu3sH74eHoaoqduysQ0trK0wmU6a2tygGQKLxKxCJ
      xgBINAZAojEAEo0BkGgMgERjACQaAyDRGACJxgBINAZAojEAEo0BkGgMgERjACQaAyDRlrwg
      huh/xjMAicYASDQGQKL9BDadIJtNC1szAAAAAElFTkSuQmCC
    </thumbnail>
  </thumbnails>
  <external>
    <shapes>
      <shape name='Custom/aprt.png'>
        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
      </shape>
      <shape name='Custom/aprt2.png'>
        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
      </shape>
    </shapes>
  </external>
</workbook>
